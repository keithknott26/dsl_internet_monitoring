version: "3.3"
services:
  dsl_exporter:
    build:
      context: ./
      dockerfile: dsl.Dockerfile
    restart: on-failure
    networks: 
      my-multihost-network:
        ipv4_address: 192.168.2.61
    ports:
      - 8001:8001
  weather_exporter:
    build:
      context: ./
      dockerfile: weather.Dockerfile
    restart: on-failure
    networks: 
      my-multihost-network:
        ipv4_address: 192.168.2.62
    ports: 
      - 8000:8000
    environment:
      - uFDBS3TBks2bTrerMwmNG8YSqYiinUqQSKckObEf
      - 41.578471,-73.41749
  speedtest_exporter:
    image: "jraviles/prometheus_speedtest:latest"
    restart: on-failure
    networks: 
      my-multihost-network:
        ipv4_address: 192.168.2.63
    ports:
      - "9092:9516"
  prometheus:
    image: "prom/prometheus:latest"
    restart: always
    user: "root"
    links: 
      - speedtest_exporter
      - weather_exporter
      - dsl_exporter
    networks: 
      my-multihost-network:
        ipv4_address: 192.168.2.64
    ports:
      - "9090:9090"
    volumes:
      - type: bind
        source: ./config/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: bind
        source: ./data/prometheus
        target: /prometheus
  grafana:
    image: "grafana/grafana:latest"
    restart: always
    user: "root"
    networks: 
      my-multihost-network:
        ipv4_address: 192.168.2.65
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=ae3e-plotly-panel
    volumes:
      - type: bind
        source: ./data/grafana
        target: /var/lib/grafana
      - type: bind
        source: ./config/grafana/provisioning
        target: /etc/grafana/provisioning/

networks:
  default:
    driver: host
    external: true
  my-multihost-network:
    driver: overlay
    external: true

  ##docker network create --driver=overlay --attachable --subnet=192.168.2.0/24 my-multihost-network